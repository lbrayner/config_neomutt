#!/usr/bin/env python3

import sys
import os

import email
from email.message import EmailMessage
from email.header import decode_header

script = sys.argv[0]
args = sys.argv[1:]

def usage():
    return "%s FILE\n" % os.path.basename(script)

if len(args) != 1:
    sys.stderr.write(usage())
    sys.exit(1)

arg = args[0]

def decode_pair(pair):
    binary = pair[0]
    encoding = pair[1]

    if encoding is None:
        if isinstance(binary, bytes):
            return binary.decode("ascii")
        else:
            return binary

    return binary.decode(encoding)

headers = ['From','To','Subject','Date']

def mail2txt(file):
    message = email.message_from_file(file,_class=EmailMessage)

    if message.get_default_type() != 'text/plain':
        raise ValueError('This message does not contain a plaintext part.')

    for header in headers:
        mime_header = message[header]
        decoded_mime_header = "".join([*map(lambda x: decode_pair(x),decode_header(mime_header))])
        # decoded_mime_header = [*decoded_mime_header]
        # decoded_mime_header = decode_header(mime_header)
        print("%s: %s" % (header,decoded_mime_header))

    print()

    for part in message.walk():
        if part.get_content_type() != message.get_default_type():
            continue

        payload = part.get_payload(decode=True)

        print(payload.decode(part.get_content_charset()))

        break

    print("\n\n---------------HEADERS---------------\n")

    for entry in  message.items():
        print("%s: %s" % entry)

if arg == "-":
    mail2txt(sys.stdin) # '-' reads from standard input
    sys.exit(0)

file_to_parse = open(arg)
mail2txt(file_to_parse)
