# https://github.com/wincent/wincent
# https://github.com/LukeSmithxyz/mutt-wizard

source $HOME/.config/neomutt/submodules/\
mutt-colors-neonwolf/mutt-colors-neonwolf-256.muttrc
source $HOME/.config/neomutt/config/neonwolf_custom.mutt
source $HOME/.config/neomutt/config/bindings.mutt
source $HOME/.config/neomutt/config/macros.mutt
source $HOME/.config/neomutt/config/settings.mutt

# The sidebar shows a list of all your mailboxes.
set sidebar_visible
set sidebar_format = "%B%?F? [%F]?%* %?N?%N/?%S"

# Controls the format of the status line displayed in the “index” menu.
# Default value: -%r-NeoMutt: %D [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d?
#  Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l?
#  %l?]---(%s/%S)-%>-(%P)---
set status_format="-%r-NeoMutt: %D %?V?{%.35V}? [Msgs:%?M?%M/?%m%?n? \
New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? \
Inc:%b?%?l? %l?]---(%s/%S)-%>-(%P)---"

# A hook is a concept found in many other programs which allows you to execute
# arbitrary commands before performing some operation. For example, you may
# wish to tailor your configuration based upon which mailbox you are reading,
# or to whom you are sending mail. In the Mutt world, a hook consists of a
# regular expression or pattern along with a configuration option/command.

# index_format: this variable allows you to customize the message index display
# to your personal taste.
folder-hook .             "set index_format='%4C %Z %?X?%2X&  ? %b %D %-15.15L %s'"
folder-hook "notmuch://*" "set index_format='%4C %Z %?X?%2X&  ? <notmuch> %D %-15.15L %s'"

# This variable controls the format of the date printed by the “%d” sequence in
# $index_format.
set date_format="%a %Y %b %e %Hh%M"

# This variable describes the format of the “attachment”.
set attach_format="%u%D%I %t%4n %T%.d%> [%m/%.10M, %e%?C?, %C?, %s]"

# This variable controls the format of the one-line message “status” displayed
# before each message in either the internal or an external pager
set pager_format="-%Z- %C/%m: %D %.40n   \"%s\" %*  -- (%P)"

# When set, mutt will periodically calculate message statistics of a mailbox
# while polling for new mail. It will check for unread, flagged, and total
# message counts.
set mail_check_stats

# When set, the message you are forwarding will be attached as a separate
# message/rfc822 MIME part instead of included in the main body of the message.
set mime_forward=ask-yes

# Controls whether or not Mutt includes only the first attachment of the message you are replying.
set include_onlyfirst=yes

# This quadoption controls whether or not the user is automatically placed in
# the editor when forwarding messages.
set forward_edit=no

# When set, the initial prompt for recipients and subject are skipped when
# replying to messages, and the initial prompt for subject is skipped when
# forwarding messages.
set fast_reply=yes

# When this variable is set, Mutt will decode RFC2047-encoded MIME parameters.
# You want to set this variable when mutt suggests you to save attachments...
set rfc2047_parameters=yes

# Header caching can greatly improve speed when opening POP, IMAP MH or Maildir
# folders
set header_cache=$HOME/.config/neomutt/.cache/mutt_cache/

# Specifies how to sort messages in the “index” menu.
set sort=threads

# Specifies how to sort entries in the file browser.
set sort_browser=date

# When sorting by threads, this variable controls how threads are sorted in
# relation to other threads, and how the branches of the thread trees are
# sorted.
set sort_aux=reverse-last-date-received

# This variable specifies which files to consult when attempting to display
# MIME bodies not directly supported by Mutt.
set mailcap_path=$HOME/.config/neomutt/mailcap

# This option allows you to edit the header of your outgoing messages along
# with the body of your message.
set edit_headers=yes

# When set along with $edit_headers, Mutt will skip the initial send-menu
# (prompting for subject and recipients) and allow you to immediately begin
# editing the body of your message.
set autoedit=yes

# The “unignore” command will make Mutt display headers with the given pattern.
unignore bcc:

# Controls whether Mutt will ask you to press a key after an external command
# has been invoked
set wait_key=no
set sleep_time = 0 # be fast

# The “forgotten-attachment” feature provides a new setting for NeoMutt that
# alerts the user if the message body contains a certain keyword but there are
# no attachments added.
set abort_noattach = ask-yes
set abort_noattach_regex = "\\<(attach|attached|attaching|attachments?)\\>|\\<anex|\\<annex"

# Mutt has some heuristics for determining which attachment of a
# multipart/alternative type to display:
# First, Mutt will check the alternative_order list to determine if one of the
# available types is preferred
# Next, Mutt will check if any of the types have a defined auto_view, and use
# that.
alternative_order text/plain text/html
auto_view text/html

# sourcing local configuration
source $HOME/.config/neomutt/neomuttrc.local

# sourcing files that depend on local configuration
source $HOME/.config/neomutt/config/notmuch.mutt

# vim:ft=muttrc
